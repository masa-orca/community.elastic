---
- vars:
    elastic_index_parameters: &elastic_index_parameters
      timeout: 90

  block:

  - name: Basic module test - single node no auth
    community.elastic.elastic_cluster_health:
      <<: *elastic_index_parameters
    ignore_errors: yes
    register: elastic

  - debug: var=elastic

  - assert:
      that:
        - "elastic.changed == False"
        - "elastic.cluster_health.cluster_name == 'docker-cluster'"
        - "elastic.cluster_health.number_of_data_nodes == 1"
        - "elastic.cluster_health.number_of_nodes == 1"


  - name: Wait for nodes is over 10 (will be timeout)
    community.elastic.elastic_cluster_health:
      <<: *elastic_index_parameters
      wait_for_nodes: '>10'
    ignore_errors: yes
    register: elastic

  - assert:
      that:
        - 'elastic.msg == "Request was reached timeout"'

  - name: Create an index with too many replicas
    community.elastic.elastic_index:
      <<: *elastic_index_parameters
      name: myindex
      settings:
        number_of_shards: 1
        number_of_replicas: 5

  - name: Test with indicies level 2
    community.elastic.elastic_cluster_health:
      <<: *elastic_index_parameters
      level: indicies
      wait_for_no_initializing_shards: true
    register: elastic

  - assert:
      that:
        - "elastic.status == 'yellow'"


  - name: Test with shards level 2
    community.elastic.elastic_cluster_health:
      <<: *elastic_index_parameters
      level: shards
    register: elastic

  - assert:
      that:
        - "elastic.status == 'yellow'"

  - name: Delete index to return cluster to a green status
    community.elastic.elastic_index:
      <<: *elastic_index_parameters
      name: myindex
      state: absent

  - name: Test with indicies level 3
    community.elastic.elastic_cluster_health:
      <<: *elastic_index_parameters
      level: indicies
    register: elastic

  - name: Test with shards level 3
    community.elastic.elastic_cluster_health:
      <<: *elastic_index_parameters
      level: shards
    register: elastic
